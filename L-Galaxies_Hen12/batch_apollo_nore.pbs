#!/bin/bash
# Tell SGE that we are using the bash shell
#$ -S /bin/bash

# Example file to create a task-farm of identical jobs on Apollo

# Do not lmit the stacksize (the maximum memory a job can use)
#ulimit -s unlimited
# Do not limit the number of open files a job can have
#ulimit -n unlimited

# Run the job from the following directory
#cd /mnt/lustre/scratch/petert/L-Galaxies/L-Galaxies

# Created files will have the fs-virgo group
# This feature seems to be disabled on Apollo, so this does not work
#newgrp fs-virgo
# Created files will have rw permission for the group and r for the world
umask 002

# Set pathnames below relative to the current working directory
#$ -cwd
# Say which queue you want to submit to
#$ -q mps_amd.q
# Define a task farm of jobs
#$ -t 1-216
# Limit to 20 concurrent jobs
#$ -tc 20
# Join standard error to standard out
#$ -j y
# Give the job a name
#$ -N Lgalaxy_nore
# Name and location of the output file
# SGE will only substitute certain variables here
#$ -o logs/$JOB_NAME_$TASK_ID.log

# The parentheses here allow one to do algebra with shell variables
i=$(($SGE_TASK_ID -1))
echo Running on file $i


# Run jobs

inputfolder="input_cubep3m/"
mkdir -p $inputfolder
template="input/input_template"
exec=./L-Galaxies
OutputDir=/mnt/lustre/scratch/cs390/AHF_halos/cubepm_130315_6_1728_47Mpc_ext2/outputs_nore/
SimulationDir=/mnt/lustre/scratch/cs390/AHF_halos/cubepm_130315_6_1728_47Mpc_ext2/
ReionizationOn=0
lastsnap=75
mkdir -p $OutputDir
mkdir -p $inputfolder
filename="${inputfolder}/input_${i}"


echo "FirstFile" $i > $filename
echo "LastFile" $i >> $filename
echo "OutputDir" $OutputDir >> $filename
echo "SimulationDir" $SimulationDir >> $filename
echo "FileWithZList" "${SimulationDir}treedata/lgal_zlist.txt" >> $filename
echo "FileWithZList_OriginalCosm" "${SimulationDir}treedata/lgal_zlist.txt" >> $filename
echo "LastDarkMatterSnapShot" $lastsnap >> $filename
echo "FileWithOutputRedshifts" "${SimulationDir}treedata/zlist.txt" >> $filename
echo "ReionizationOn" $ReionizationOn >> $filename
cat $template >> $filename

$exec $filename

